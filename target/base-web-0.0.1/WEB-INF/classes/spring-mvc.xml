<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans    
                        http://www.springframework.org/schema/beans/spring-beans.xsd    
                        http://www.springframework.org/schema/context    
                        http://www.springframework.org/schema/context/spring-context.xsd    
                        http://www.springframework.org/schema/mvc    
                        http://www.springframework.org/schema/mvc/spring-mvc.xsd">


	<!--避免IE执行AJAX时，返回JSON出现下载文件 -->
	<bean id="mappingFastJsonHttpMessageConverter" 
		class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
				<value>application/json</value>
			</list>
		</property>
		<property name="features">
			<list>
				<value>WriteMapNullValue</value>
				<value>QuoteFieldNames</value>
			</list>
		</property>
	</bean>

	<mvc:annotation-driven>
		<mvc:message-converters register-defaults="true">
			<ref bean="mappingFastJsonHttpMessageConverter" />
		</mvc:message-converters>
	</mvc:annotation-driven>

	<!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->
	<context:component-scan base-package="com.geovis" />

	<bean class="com.mangofactory.swagger.configuration.SpringSwaggerConfig" />
	<!-- <bean class="com.geovis.web.global.SwaggerConfig" /> -->

	<!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="mappingFastJsonHttpMessageConverter" /> <!-- JSON转换器 -->
			</list>
		</property>
	</bean>
	<!-- 配置静态资源，直接映射到对应的文件夹，不被DispatcherServlet处理 -->
	<mvc:resources mapping="/images/**" location="/static/images/" />
	<mvc:resources mapping="/css/**" location="/static/css/" />
	<mvc:resources mapping="/js/**" location="/static/js/" />
	<mvc:resources mapping="/html/**" location="/static/html/" />
	<!-- 定义跳转的文件的前后缀 ，视图模式配置 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 默认编码 -->
		<property name="defaultEncoding" value="utf-8" />
		<!-- 文件大小最大值 -->
		<property name="maxUploadSize" value="10485760000" />
		<!-- 内存中的最大值 -->
		<property name="maxInMemorySize" value="4096000" />
	</bean>
	
	
	<!-- 错误异常拦截重定向 -->
	<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="defaultErrorView" value="error/500"></property>
		
		<property name="exceptionMappings">
			<props>
				<!-- 绑定参数异常 -->
				<prop key="org.springframework.web.bind.MissingServletRequestParameterException">error/param-error</prop>
				<prop key="org.springframework.web.bind.ServletRequestBindingException">error/param-error</prop>
				<!-- 参数不合法异常 -->
				<prop key="java.lang.IllegalArgumentException">error/param-error</prop>
				<!-- 参数验证非法异常 -->
				<prop key="org.springframework.validation.BindException">error/param-error</prop>
				<prop key="java.lang.Exception">error/500</prop>
			</props>
		</property>
	</bean>
</beans>  